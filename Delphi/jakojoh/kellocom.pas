unit kellocom;interfaceuses  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,  StdCtrls, ExtCtrls;type Tkello = class(TGraphicControl)  private   vainosoitinsiirtyy : Boolean;   pykpituus, pykpaksuus, ymppaksuus, numetaisyys, viispaksuus,   pyketaisyys, viisetaisyys : integer;   kerta,aikamaara,pyoralkuaika,pyoraskelmaara : integer;   pyorpaalla : Boolean;   sisusvari, ympvari, pykvari, viisvari : TColor;   askelmaara,aika : integer;   kp : TPoint;   sade : integer;   pykpaalla, numerot : Boolean;   fontti : TFont;     procedure fonttimuutettu( Sender : TObject );     procedure laskepiirtoparam;     function suurinpituus( loppunro : integer ) : integer;     procedure piirra_ympyra( kp: TPoint ; sade : integer );     procedure piirra_pykalat( kp: TPoint ; sade : integer );     procedure piirra_numerot( kp: TPoint ; sade : integer );     procedure piirra_viisari( kp: TPoint ; sade : integer );{     procedure OnTimerProc( Sender : TObject ); }     procedure SetOnlyPointerDrawnWhenMoved( Value : Boolean );     procedure SetPointerPlaceNumber( Value : integer );     procedure SetPointerTime( Value : integer );     procedure SetNumberOn( Value : Boolean );     procedure SetFont( Value : TFont );     procedure SetLinesOn( Value : Boolean );     procedure SetLineDistance( Value : integer );     procedure SetLineLength( Value : integer );     procedure SetCircleWidth( Value : integer );     procedure SetNumberDistance( Value : integer );     procedure SetPointerWidth( Value : integer );     procedure SetPointerDistance( Value : integer );     procedure SetLineColor( Value : TColor );     procedure SetPointerColor( Value : TColor );     procedure SetFillColor( Value : TColor );     procedure SetBorderColor( Value : TColor );     procedure SetBounds(ALeft, ATop, AWidth, AHeight: Integer); override;  protected     procedure Paint; override;  public     constructor Create(AOwner: TComponent); override;     destructor Destroy; override;  published    property DragCursor;    property DragMode;    property Enabled;    property ParentShowHint;    property OnlyPointerDrawnWhenMoved : Boolean      read vainosoitinsiirtyy write SetOnlyPointerDrawnWhenMoved;    property PointerPlaceNumber : integer read askelmaara             write SetPointerPlaceNumber default 12;    property PointerTime : integer read aika write SetPointerTime;    property NumbersOn : Boolean read numerot write SetNumberOn default true;    property Font : TFont read fontti write SetFont;    property LinesOn : Boolean read pykpaalla write SetLinesOn default true;    property LineDistance : integer read pyketaisyys write SetLineDistance             default 5;    property LineLength : integer read pykpituus write SetLineLength default 5;    property CircleWidth : integer read ymppaksuus write SetCircleWidth             default 3;    property NumberDistance : integer read numetaisyys write SetNumberDistance             default 5;    property PointerWidth : integer read viispaksuus write SetPointerWidth             default 3;    property PointerDistance : integer read viisetaisyys             write SetPointerDistance default 5;    property FillColor : TColor read sisusvari write SetFillColor             default ClWhite;    property BorderColor : TColor read ympvari write SetBorderColor             default ClBlack;    property LineColor : TColor read pykvari write SetLineColor             default ClBlue;    property PointerColor : TColor read viisvari write SetPointerColor             default ClGreen;    property Visible;end;procedure register;implementationprocedure Tkello.fonttimuutettu( Sender : TObject );begin  InValidate;end;constructor Tkello.Create(AOwner: TComponent);begin  inherited Create( AOwner );  aika := askelmaara;  pyorpaalla := false;  fontti := TFont.Create;  fontti.OnChange := fonttimuutettu;  width := 150; height := 150;  askelmaara := 12;  numerot := true;pykpaalla := true;  pyketaisyys := -3;  pykpaksuus := 3;  pykpituus   :=  5;  ymppaksuus :=  3;  numetaisyys :=  -15;  viispaksuus :=  3;  viisetaisyys :=  25;  sisusvari  :=  ClWhite;  ympvari  :=  ClBlack;  pykvari :=  ClBlue;  viisvari :=  ClGreen;end;destructor Tkello.Destroy;begin  fontti.free;  inherited Destroy;end;procedure Tkello.SetBounds(ALeft, ATop, AWidth, AHeight: Integer);var keskim : integer;begin  if (Width<>AWidth) and (Height=AHeight) then    inherited SetBounds(ALeft,Atop,AWidth,AWidth)  else if (Height<>AHeight) and (Width=AWidth) then    inherited SetBounds(ALeft,Atop,AHeight,AHeight)  else begin    keskim := (AWidth+AHeight) div 2;    inherited SetBounds(ALeft,ATop,keskim,keskim);  end;end;function Tkello.suurinpituus( loppunro : integer ) : integer;var t : integer;begin  with Canvas do begin    result := textwidth( IntToStr(1) );    if textwidth( IntToStr(1) ) > result then      result := textwidth( IntToStr(1) );    for t:= 2 to loppunro do      begin      if textwidth( IntToStr(t) ) > result then        result := textwidth( IntToStr(t) );      if textheight( IntToStr(t) ) > result then        result := textwidth( IntToStr(t) );      end;  end;end;procedure Tkello.SetOnlyPointerDrawnWhenMoved( Value : Boolean );begin  vainosoitinsiirtyy := Value;end;procedure Tkello.SetLinesOn( Value : Boolean );begin  pykpaalla := Value;  InValidate;end;procedure Tkello.laskepiirtoparam;var suurinnumpituus : integer;    ulkoetaisyys : integer;begin  suurinnumpituus := suurinpituus( askelmaara );  ulkoetaisyys := 0;  if (numetaisyys>0) then ulkoetaisyys := numetaisyys+suurinnumpituus;  if (pyketaisyys+pykpituus>numetaisyys) then    ulkoetaisyys := pyketaisyys+pykpituus;  sade := (width-2*ulkoetaisyys-2) div 2;  kp.x := sade+ulkoetaisyys+1;  kp.y := sade+ulkoetaisyys+1;  height := width;end;procedure Tkello.piirra_ympyra( kp : TPoint; sade : integer );begin  with Canvas Do begin    Pen.Color := ympvari;    Pen.Width := ymppaksuus;    Brush.Color := sisusvari;    Brush.Style := bssolid;    Ellipse( round(kp.x-sade),round(kp.y-sade),             round( kp.x+sade ),round( kp.y+sade ) );  end;end;procedure Tkello.piirra_pykalat( kp : TPoint; sade : integer );var askel,xa,ya,xl,yl : integer;begin  askel:=0;while( askel < askelmaara ) do  begin    if ( pyketaisyys<0 ) then begin      xa := kp.x + round(Sin( askel/askelmaara*2*Pi )*                              ( sade-pykpituus+pyketaisyys ));      ya := kp.y - round(Cos( askel/askelmaara*2*Pi )*                              ( sade-pykpituus+pyketaisyys ));      xl := kp.x + round(Sin( askel/askelmaara*2*Pi )* (sade+pyketaisyys));      yl := kp.y - round(Cos( askel/askelmaara*2*Pi )* (sade+pyketaisyys));    end else begin      xa := kp.x + round(Sin( askel/askelmaara*2*Pi )*                              ( sade+pykpituus+pyketaisyys ));      ya := kp.y - round(Cos( askel/askelmaara*2*Pi )*                              ( sade+pykpituus+pyketaisyys ));      xl := kp.x + round(Sin( askel/askelmaara*2*Pi )* (sade+pyketaisyys));      yl := kp.y - round(Cos( askel/askelmaara*2*Pi )* (sade+pyketaisyys));    end;    with Canvas do begin      Pen.Color := pykvari;      Pen.Width := pykpaksuus;      MoveTo( xa , ya );      LineTo( xl , yl );    end;    inc( askel );  end;end;procedure Tkello.piirra_numerot;var numero,twinpixels,thinpixels,txout,tyout : integer;    numeroteksti : string;begin  with Canvas Do begin  Font := fontti;  Brush.Style := bsClear;  for numero:=1 to askelmaara do    begin      numeroteksti := IntToStr(numero);      twinpixels := TextWidth(numeroteksti);      thinpixels := TextHeight(numeroteksti);      txout := kp.x + round(Sin( numero/askelmaara*2*Pi )*               ( sade+numetaisyys+ymppaksuus ))-round( twinpixels/2 );      tyout := kp.y - round(Cos( numero/askelmaara*2*Pi )*               ( sade+numetaisyys+ymppaksuus ))-round(thinpixels/2);      textout(txout,tyout,numeroteksti);    end;  end;end;procedure Tkello.piirra_viisari( kp : TPoint ; sade : integer );var xl,yl : integer;begin  with Canvas Do begin    Pen.Width := viispaksuus;    Pen.Color := viisvari;    MoveTo(kp.x,kp.y);    xl := kp.x + round(Sin( aika/askelmaara*2*Pi ) * ( sade-viisetaisyys ));    yl := kp.y - round(Cos( aika/askelmaara*2*Pi ) * ( sade-viisetaisyys ));    LineTo(xl,yl);  end;end;procedure Tkello.Paint;begin  laskepiirtoparam;  piirra_ympyra( kp, sade );  if (pykpaalla) then piirra_pykalat( kp, sade );  piirra_viisari( kp, sade );  if (numerot) then piirra_numerot( kp, sade );end;procedure Tkello.SetPointerPlaceNumber( Value : integer );var oldvalue : integer;    ok : Boolean;begin  if ( Value>1 ) then begin    askelmaara := Value;    InValidate;  end;end;procedure Tkello.SetPointerTime( Value : integer );var vari : TColor;begin  if (( Value>=1 ) and ( Value<=askelmaara)) then    begin    if (vainosoitinsiirtyy) then begin      vari := viisvari;      viisvari := sisusvari;      piirra_viisari( kp, sade );      aika := Value;      viisvari := vari;      piirra_viisari( kp, sade );    end else begin      aika := Value;      InValidate;    end;    end;end;procedure Tkello.SetNumberOn( Value : Boolean );begin  numerot := Value;  Invalidate;end;procedure Tkello.SetFont( Value : TFont );begin  fontti.Assign(Value);  InValidate;end;procedure Tkello.SetLineDistance( Value : integer );begin  pyketaisyys := Value;  InValidate;end;procedure Tkello.SetLineLength( Value : integer );begin  if (Value>0) then begin pykpituus := Value;InValidate; end;end;procedure Tkello.SetCircleWidth( Value : integer );begin  if (Value>0) then begin ymppaksuus := Value;InValidate; end;end;procedure Tkello.SetNumberDistance( Value : integer );begin  numetaisyys := Value;  InValidate;end;procedure Tkello.SetPointerWidth( Value : integer );begin  if (Value>0) then begin viispaksuus := Value;InValidate; end;end;procedure Tkello.SetPointerDistance( Value : integer );begin  if (Value>0) then begin viisetaisyys := Value;InValidate; end;end;procedure Tkello.SetLineColor( Value : TColor );begin  pykvari := Value;  Invalidate;end;procedure Tkello.SetPointerColor( Value : TColor );begin  viisvari := Value;  Invalidate;end;procedure Tkello.SetFillColor( Value : TColor );begin  sisusvari := Value;  Invalidate;end;procedure Tkello.SetBorderColor( Value : TColor );begin  ympvari := Value;  Invalidate;end;procedure register;begin  RegisterComponents('Opetusohjelma',[Tkello]);end;end.