unit jakok2;interfaceuses  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,  ExtCtrls, StdCtrls;const piirtoobjektimaxmaara = 100;type TPoint = record  x,y : integer;end;type pobjt = (lukut,viivat,mmerkki);type piirtoobjekti = record       alkupaikka,loppupaikka : TPoint;       tyyppi : pobjt;       luku : integer;       vaihenro,lukunro : integer;     end;     piirtoobjektitaul = array[1..piirtoobjektimaxmaara] of piirtoobjekti;type Tjakok = class(TGraphicControl)  private    alkux,alkuy : integer;    jjvari : TColor;    jaettava, jakaja : integer;    fontti : TFont;    viivanvari : TColor;    taustavari : TColor;    jaetalkux : integer;    numleveys,numkorkeus,valikoko : integer;    viivanpaksuus : integer;    vaihemaara,lukumaara : integer;    vaihenro,lukunro : integer;    piirravaiheeseen : Boolean;    piirtoobjektit : piirtoobjektitaul;    viimobjindeksi : integer;  { objektilistan talletukseen ja tutkimiseen liittyv…t proseduurit }    procedure lisaaviiva( alkupaikka, loppupaikka : TPoint ;                          vaihenroi,lukunroi : integer );    procedure lisaaluku( alkupaikka : TPoint;                         lukui,lukunroi,vaihenroi : integer );    procedure lisaamiinus( alkupaikka : TPoint;                           lukunroi,vaihenroi : integer );    procedure tyhjennapiirtoobjektit;  { objektilistan luomiseen liittyv…t proseduurit }    procedure maaritanumeroleveys_ja_korkeus;    procedure piirtopaikka( alkurivi,alkusarake,      loppurivi,loppusarake : integer;      viiva,miinus : Boolean ;      var alkupaikka,loppupaikka : TPoint );    procedure luo_jaettava_ja_jakaja( var viimjaetindeksi : integer );    procedure lisaatulosnumero( osamaara, jaettavaindeksi : integer;                                var vaihenroi, lukunroi : integer );    procedure lisaatulo( tulo, jaettavaindeksi, seurlukurivi : integer;                         var vaihenroi, lukunroi : integer );    procedure lisaaviiva_ja_miinus( osajaettavaalkusarake,      jaettavaindeksi, seurlukurivi,lukunroi : integer;      var vaihenroi : integer );    procedure uusiosajaettava( osajaettava,jaettavaindeksi,rivi : integer;      var osajaettavaalkusarake,vaihenroi,lukunroi : integer );    procedure lisaapudotusnumero( jaettavaindeksi, rivi, osanumero : integer;      var vaihenroi, lukunroi : integer );    procedure luoobjektilista;  { piirt…miseen liittyv…t proceduurit }    procedure muutafontti( Sender : TObject );    procedure piirraluku( luku : integer;alkupaikka : TPoint );    procedure piirramiinus( alkupaikka : TPoint );    function vaihe_tai_numero( vaihe_tai_numero : integer;      vaihe : Boolean ) : integer;    procedure SetFont( Value : TFont );    procedure SetLineWidth( Value : integer );    procedure SetLineColor( Value : TColor );    procedure SetSpaceWidth( Value : integer );    procedure SetStage( Value : integer );    procedure SetNumberStage( Value : integer );    procedure SetStageType( Value : Boolean );    procedure SetDivisor( Value : integer );    procedure SetDividedNumber( Value : integer );    procedure SetBgColor( Value : TColor );    procedure SetModColor( Value : TColor );    procedure SetPaintX( Value : integer );    procedure SetPaintY( Value : integer );    protected    procedure Paint; override;  public    constructor Create( AOwner : TComponent ); override;    destructor Destroy; override;  published    property Align;    property DragCursor;    property DragMode;    property Enabled;    property ParentShowHint;    property PaintX : integer read alkux write SetPaintX;    property PaintY : integer read alkuy write SetPaintY;    property Font : TFont read fontti write SetFont;    property BgColor : TColor read taustavari write SetBgColor;    property LineColor : TColor read viivanvari write SetLineColor;    property LineWidth : integer read viivanpaksuus write      SetLineWidth;    property SpaceWidth : integer read valikoko write      SetSpaceWidth;    property DrawToStage : Boolean read piirravaiheeseen      write SetStageType;    property Stage : integer read vaihenro write SetStage;    property NumberStage : integer read lukunro write      SetNumberStage;    property StageAmount  : integer read vaihemaara; { readonly }    property NumberAmount : integer read lukumaara; { readonly }    property Divisor : integer read jakaja write SetDivisor;    property DividedNumber : integer read jaettava write      SetDividedNumber;    property ModColor : TColor read jjvari write SetModColor;    property Visible;    property OnDragDrop;    property OnDragOver;    property OnEndDrag;    property OnMouseDown;    property OnMouseMove;    property OnMouseUp;    property OnStartDrag;end;procedure register;implementation{ Yleisrutiineja }function osaluku( luku,alkuind,numeromaara : integer ) : integer;{ Antaa luvusta merkkijonoksi tulkittuna alkuind -kohdalta  numeromaara -merkki… pitk…… merkkijonoa vastaavan luvun  integer-muodossa }var lukumj,alimj : string;    indeksi,numkerroin : integer;begin  lukumj := IntToStr( luku );  alimj := Copy( lukumj, alkuind, numeromaara );  result := StrToInt( alimj );end;{ Graafisen puolen tietorakenteen k…sittelyruutiinit }constructor Tjakok.Create( AOwner : TComponent );var i : integer;begin  inherited Create( AOwner );  fontti := TFont.Create;  fontti.OnChange := muutafontti;  viivanvari := ClBlack;  taustavari := ClWhite;  jaettava := 234;  jakaja := 12;  valikoko := 4;  viivanpaksuus := 2;  vaihenro := 1;lukunro := 1;  piirravaiheeseen := false;  viimobjindeksi := 0;  width := 200;height := 200;  alkux := 0;alkuy := 0;  for i:= 0 to piirtoobjektimaxmaara do    piirtoobjektit[i].lukunro := 0;end;procedure Tjakok.muutafontti(Sender : TObject);begin  Paint;end;destructor Tjakok.Destroy;begin  inherited Destroy;  fontti.free;  tyhjennapiirtoobjektit;end;procedure Tjakok.lisaaviiva(  alkupaikka, loppupaikka : TPoint ; vaihenroi,lukunroi : integer );begin  Inc(viimobjindeksi);  piirtoobjektit[viimobjindeksi].vaihenro := vaihenroi;  piirtoobjektit[viimobjindeksi].lukunro  := lukunroi;  piirtoobjektit[viimobjindeksi].tyyppi := viivat;  piirtoobjektit[viimobjindeksi].alkupaikka  := alkupaikka;  piirtoobjektit[viimobjindeksi].loppupaikka := loppupaikka;end;procedure Tjakok.lisaaluku(  alkupaikka : TPoint; lukui,lukunroi,vaihenroi : integer );begin  Inc(viimobjindeksi);  piirtoobjektit[viimobjindeksi].vaihenro := vaihenroi;  piirtoobjektit[viimobjindeksi].lukunro  := lukunroi;  piirtoobjektit[viimobjindeksi].luku := lukui;  piirtoobjektit[viimobjindeksi].tyyppi := lukut;  piirtoobjektit[viimobjindeksi].alkupaikka  := alkupaikka;end;procedure Tjakok.lisaamiinus( alkupaikka : TPoint;  lukunroi,vaihenroi : integer );begin  Inc(viimobjindeksi);  piirtoobjektit[viimobjindeksi].vaihenro := vaihenroi;  piirtoobjektit[viimobjindeksi].lukunro  := lukunroi;  piirtoobjektit[viimobjindeksi].tyyppi := mmerkki;  piirtoobjektit[viimobjindeksi].alkupaikka  := alkupaikka;end;procedure Tjakok.tyhjennapiirtoobjektit;begin  viimobjindeksi := 0;end;{ Piirt“miseen liittyv“t proceduurit }procedure Tjakok.piirraluku( luku : integer;alkupaikka : TPoint );var lukumj,merkkimj : string;    mjpit,indeksi : integer;begin  lukumj := IntToStr(luku);  mjpit := Length(lukumj);  with Canvas Do begin    for indeksi := 1 to mjpit do begin      merkkimj := Copy(lukumj,indeksi,1);      TextOut(alkupaikka.x+alkux+numleveys*(indeksi-1),alkupaikka.y+alkuy,merkkimj);    end;  end;end;procedure Tjakok.piirramiinus( alkupaikka : TPoint );begin  Canvas.TextOut(alkupaikka.x+alkux,alkupaikka.y+alkuy,'-');end;procedure Tjakok.Paint;var pobjindeksi : integer;    loppu : Boolean;begin   luoobjektilista;   pobjindeksi := 1;loppu := false;   with Canvas Do begin     Font.Assign(fontti);     if (pobjindeksi>viimobjindeksi) then loppu := true;     Brush.Color := taustavari;     Brush.Style := bssolid;     Pen.Color := taustavari;     Pen.Width := viivanpaksuus;     FloodFill( 10,5, clWhite , fsBorder );     Pen.Color := viivanvari;     while not loppu do begin       if (piirtoobjektit[pobjindeksi].tyyppi=viivat) then begin         MoveTo((piirtoobjektit[pobjindeksi].alkupaikka).x+alkux,                (piirtoobjektit[pobjindeksi].alkupaikka).y+alkuy);         LineTo((piirtoobjektit[pobjindeksi].loppupaikka).x+alkux,                (piirtoobjektit[pobjindeksi].loppupaikka).y+alkuy);       end;       if (piirtoobjektit[pobjindeksi].tyyppi=lukut) then begin         if (pobjindeksi=viimobjindeksi) then Canvas.Font.Color := jjvari;         piirraluku(piirtoobjektit[pobjindeksi].luku,                    piirtoobjektit[pobjindeksi].alkupaikka);       end;       if (piirtoobjektit[pobjindeksi].tyyppi=mmerkki) then         piirramiinus(piirtoobjektit[pobjindeksi].alkupaikka);       Inc(pobjindeksi);       if (pobjindeksi>viimobjindeksi) then loppu := true else begin         if piirravaiheeseen and            ( piirtoobjektit[pobjindeksi].vaihenro > vaihenro ) then           loppu := true;         if ( not piirravaiheeseen ) and            ( piirtoobjektit[pobjindeksi].lukunro > lukunro ) then loppu := true;       end;     end;  end;end;{ Objektilistan luomiseen liittyv…t rutiinit }procedure Tjakok.maaritanumeroleveys_ja_korkeus;var i : integer;begin  numleveys := 0;numkorkeus := 0;  with Canvas Do begin    for i:= 0 to 9 do begin      if ( numleveys < TextWidth(IntToStr(i)) ) then        numleveys := TextWidth(IntToStr(i));      if ( numkorkeus < TextHeight(IntToStr(i)) ) then        numkorkeus := TextHeight(IntToStr(i));    end;    if (numleveys < TextWidth('-')) then      numleveys := TextWidth('-');    if ( numkorkeus < TextHeight('-') ) then        numkorkeus := TextHeight('-');  end;end;procedure Tjakok.piirtopaikka( alkurivi,alkusarake,   loppurivi,loppusarake : integer;   viiva,miinus : Boolean ;   var alkupaikka,loppupaikka : TPoint );begin  alkupaikka.x := jaetalkux+(alkusarake-1)*numleveys;  loppupaikka.x := alkupaikka.x+(loppusarake-alkusarake+1)*numleveys;  if (viiva or miinus) then alkupaikka.x := alkupaikka.x-numleveys;  if (alkurivi=1) then alkupaikka.y := 0;  if (alkurivi>=3) then alkupaikka.y := 2*numkorkeus+3*valikoko+2*viivanpaksuus;  if (alkurivi>3) then alkupaikka.y := alkupaikka.y +    trunc((alkurivi-2)/2)*(2*valikoko+viivanpaksuus)+    trunc((alkurivi-3)/2)*valikoko+numkorkeus*(alkurivi-3);  if viiva then    alkupaikka.y := alkupaikka.y+numkorkeus+valikoko+      viivanpaksuus div 2;  loppupaikka.y := alkupaikka.y;end;procedure Tjakok.luo_jaettava_ja_jakaja( var viimjaetindeksi : integer );var alkupaikka,loppupaikka : TPoint;    lukumj : string;begin  lukumj := IntToStr(jakaja);  jaetalkux := length(lukumj)*numleveys+2*valikoko+viivanpaksuus;  alkupaikka.x := jaetalkux;  alkupaikka.y := numkorkeus+2*valikoko+viivanpaksuus;  lisaaluku( alkupaikka,jaettava,1,1);  alkupaikka.x := 0;  lisaaluku( alkupaikka,jakaja,2,2);  alkupaikka.x := jaetalkux-valikoko-round(viivanpaksuus/2);  alkupaikka.y := alkupaikka.y-valikoko-round(viivanpaksuus/2);  lukumj := IntToStr(jaettava);viimjaetindeksi := length(lukumj);  loppupaikka.x := alkupaikka.x+valikoko+length(lukumj)*numleveys+viivanpaksuus;  loppupaikka.y := alkupaikka.y;  lisaaviiva( alkupaikka, loppupaikka,3,2);  loppupaikka.x := alkupaikka.x;  loppupaikka.y := alkupaikka.y+numkorkeus+2*valikoko+    viivanpaksuus;  lisaaviiva( alkupaikka,loppupaikka,4,2);  alkupaikka.x := 0;alkupaikka.y := loppupaikka.y;  lisaaviiva( alkupaikka,loppupaikka,5,2)end;procedure sarakemuunnos( luku,viimindeksi : integer;  var alkuindeksi,numeromaara : integer );var lukumj : string;begin  lukumj := IntToStr(luku);  numeromaara := length(lukumj);  alkuindeksi := viimindeksi-numeromaara+1;end;procedure Tjakok.lisaatulosnumero(  osamaara , jaettavaindeksi : integer; var vaihenroi, lukunroi : integer );var alkupaikka,loppupaikka : TPoint;begin  piirtopaikka( 1,jaettavaindeksi,1,jaettavaindeksi,false,false,                alkupaikka, loppupaikka );  lisaaluku( alkupaikka, osamaara, lukunroi, vaihenroi );  Inc(lukunroi);Inc(vaihenroi);end;procedure Tjakok.lisaatulo( tulo, jaettavaindeksi, seurlukurivi : integer;  var vaihenroi, lukunroi : integer );var alkuindeksi,numeromaara : integer;    alkupaikka,loppupaikka : TPoint;begin  sarakemuunnos( tulo, jaettavaindeksi, alkuindeksi, numeromaara );  piirtopaikka( seurlukurivi, alkuindeksi, seurlukurivi, jaettavaindeksi,    false, false, alkupaikka, loppupaikka );  lisaaluku( alkupaikka, tulo, lukunroi, vaihenroi );  Inc(lukunroi);Inc(vaihenroi);end;procedure Tjakok.lisaaviiva_ja_miinus( osajaettavaalkusarake,  jaettavaindeksi, seurlukurivi,lukunroi : integer; var vaihenroi : integer );var alkupaikka,loppupaikka : TPoint;begin  piirtopaikka( seurlukurivi, osajaettavaalkusarake,    seurlukurivi,jaettavaindeksi,true,false,alkupaikka,loppupaikka);  lisaaviiva( alkupaikka,loppupaikka,vaihenroi,lukunroi);  Inc(vaihenro);  piirtopaikka( seurlukurivi, osajaettavaalkusarake,    seurlukurivi, osajaettavaalkusarake,false,true,alkupaikka,loppupaikka);  lisaamiinus( alkupaikka,lukunroi,vaihenroi);  Inc(vaihenro);end;procedure Tjakok.uusiosajaettava( osajaettava,jaettavaindeksi,rivi :  integer; var osajaettavaalkusarake,vaihenroi,lukunroi : integer );var alkupaikka,loppupaikka : TPoint;    numeromaara : integer;begin  sarakemuunnos( osajaettava,jaettavaindeksi,osajaettavaalkusarake,numeromaara);  piirtopaikka( rivi,osajaettavaalkusarake,rivi,jaettavaindeksi,false,false,                alkupaikka, loppupaikka );  lisaaluku( alkupaikka, osajaettava, lukunroi, vaihenroi );  Inc(lukunroi);Inc(vaihenroi);end;procedure Tjakok.lisaapudotusnumero( jaettavaindeksi, rivi,          osanumero  : integer; var vaihenroi, lukunroi : integer );var alkupaikka,loppupaikka : TPoint;begin  piirtopaikka( rivi, jaettavaindeksi, rivi, jaettavaindeksi,    false,false, alkupaikka, loppupaikka );  lisaaluku( alkupaikka, osanumero, lukunroi, vaihenroi );  Inc(lukunroi);Inc(vaihenroi);end;procedure Tjakok.luoobjektilista;{ Luodaan piirrett…v…t objektit objektilistaan ja m……ritet……n  vaihemaara, lukumaara, height, width -parametrit ( readonly - ominaisuudet ) }var jaettavaindeksi,viimjaetindeksi : integer;   { numeron, jonka kohdalla ollaan    jaettavassa menossa, merkkijonoindeksi jaettavan suhteen. }    vaihenroi,lukunroi : integer; { Ilmaisee seuraavan luotavan      piirtoobjektin vaihenumeron ja lukunumeron }    osajaettava : integer; { Ilmaisee luvun, johon jakajaa seuraavaksi      verrataan }    osamaara,jakojaannos : integer;    osajaettavaalkusarake : integer;    osanumero : integer;    seurlukurivi : integer;    ontulosnumeroita,erotettulasku : Boolean;begin  tyhjennapiirtoobjektit;  maaritanumeroleveys_ja_korkeus;  luo_jaettava_ja_jakaja( viimjaetindeksi );  seurlukurivi := 3;  jaettavaindeksi := 1;vaihenroi := 6;lukunroi := 3;  osajaettava := osaluku( jaettava,1,1 );  osajaettavaalkusarake := 1;  ontulosnumeroita := false; erotettulasku := false;  while (jaettavaindeksi<=viimjaetindeksi) do begin    osamaara := osajaettava div jakaja;    if ( osamaara > 0 ) then begin      lisaatulosnumero( osamaara , jaettavaindeksi, vaihenroi, lukunroi );      if (not ontulosnumeroita) then ontulosnumeroita := true;      jakojaannos := osajaettava-osamaara*jakaja;      if (jakojaannos>0) or (jaettavaindeksi=viimjaetindeksi) or         (seurlukurivi>3) then begin        lisaatulo( osamaara*jakaja, jaettavaindeksi, seurlukurivi,                   vaihenroi, lukunroi );        lisaaviiva_ja_miinus( osajaettavaalkusarake,          jaettavaindeksi, seurlukurivi, lukunroi, vaihenroi );        osajaettava := jakojaannos;        uusiosajaettava( osajaettava,          jaettavaindeksi, seurlukurivi+1, osajaettavaalkusarake ,          vaihenroi, lukunroi );        seurlukurivi := seurlukurivi+2;        if (jakojaannos=0) and (jaettavaindeksi<viimjaetindeksi) then begin          osajaettava := osaluku( jaettava, jaettavaindeksi+1, 1 );          osajaettavaalkusarake := jaettavaindeksi+1;          seurlukurivi := 3;        end;      end else begin { jakojaannos=0, takaisin jaettavan tasolle }        osajaettava := osaluku( jaettava, jaettavaindeksi+1, 1 );        osajaettavaalkusarake := jaettavaindeksi+1;        seurlukurivi := 3;      end;    end else begin { osamaara=0, ts. uusi luku osajaettavaan. }      if (seurlukurivi>3) then begin        osanumero := osaluku( jaettava, jaettavaindeksi, 1 );        lisaapudotusnumero( jaettavaindeksi,          seurlukurivi-1 , osanumero , vaihenroi, lukunroi );        Dec(jaettavaindeksi);      end else begin osanumero := osaluku( jaettava, jaettavaindeksi+1,        jaettavaindeksi-osajaettavaalkusarake+1 );        if ontulosnumeroita then          lisaatulosnumero( 0 , jaettavaindeksi, vaihenroi, lukunroi );      end;      osajaettava := 10*osajaettava+osanumero;    end;    Inc(jaettavaindeksi);  end;  vaihemaara := vaihenroi-1;  lukumaara := lukunroi-1;end;{ Ominaisuuksien asetusproseduurit }procedure Tjakok.SetFont( Value : TFont );begin  fontti.Assign(Value);  Invalidate;end;procedure Tjakok.SetLineWidth( Value : integer );begin  if (Value>0) and (Value<5) then    begin    viivanpaksuus := Value;    Invalidate;    end;end;procedure Tjakok.SetModColor( Value : TColor );begin  jjvari := Value;  InValidate;end;procedure Tjakok.SetLineColor( Value : TColor );begin  viivanvari := Value;  InValidate;end;procedure Tjakok.SetSpaceWidth( Value : integer );begin  if (valikoko>0) then begin    valikoko := Value;Invalidate;  end;end;function Tjakok.vaihe_tai_numero( vaihe_tai_numero : integer;  vaihe : Boolean ) : integer;var loytyi : Boolean;begin  result := 1;loytyi := false;  while not loytyi do begin    if (not vaihe and (result>viimobjindeksi)) then begin      loytyi := true;      Dec(result);    end;    if not loytyi then begin      if (vaihe and (piirtoobjektit[result].vaihenro = vaihe_tai_numero) ) then        loytyi := true;      if (not vaihe and (        (piirtoobjektit[result].lukunro > vaihe_tai_numero )        or (piirtoobjektit[result].lukunro=0)) ) then begin          loytyi := true;          Dec(result);        end;    end;    if not loytyi then Inc(result);  end;end;procedure Tjakok.SetBgColor( Value : TColor );begin  taustavari := Value;  InValidate;end;procedure Tjakok.SetStage( Value : integer );var vastpiirtoobjind : integer;begin  if (Value>0) and (Value<=vaihemaara) then begin    vaihenro := Value;    vastpiirtoobjind := vaihe_tai_numero( vaihenro, true );    lukunro := piirtoobjektit[vastpiirtoobjind].lukunro;    InValidate;  end;end;procedure Tjakok.SetNumberStage( Value : integer );var vastpiirtoobjind : integer;begin  if (Value>0) then begin    lukunro := Value;    vastpiirtoobjind := vaihe_tai_numero( lukunro, false );    vaihenro := piirtoobjektit[vastpiirtoobjind].vaihenro;    InValidate;  end;end;procedure Tjakok.SetStageType( Value : Boolean );begin  piirravaiheeseen := Value;  Invalidate;end;procedure Tjakok.SetDivisor( Value : integer );begin  if (Value>0) and (Value<=jaettava) then begin    jakaja := Value;    Invalidate;  end;end;procedure Tjakok.SetDividedNumber( Value : integer );begin  if (Value>0) and (Value>=jakaja) then begin    jaettava := Value;    Invalidate;  end;end;procedure TJakok.SetPaintX( Value : integer );begin  if (Value>0) then alkux := Value;  InValidate;end;procedure TJakok.SetPaintY( Value : integer );begin  if (Value>0) then alkuy := Value;  InValidate;end;{ Register }procedure Register;begin  RegisterComponents('Opetusohjelma',[Tjakok]);end;end.