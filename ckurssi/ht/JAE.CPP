#include "jae.h"void cJae::aseta_jae( unsigned char ikirja, unsigned char iluku, unsigned char ijae ){  kirja=ikirja;luku=iluku;jae=ijae;}void cJae::anna_jae( unsigned char *okirja, unsigned char *oluku, unsigned char *ojae ){  *okirja=kirja;*oluku=luku;*ojae=jae;}void cJae::aseta_kirja( unsigned char ikirja ){  kirja=ikirja;}void cJae::aseta_luku( unsigned char iluku ){  luku=iluku;}void cJae::aseta_jae( unsigned char ijae ){  jae=ijae;}unsigned char cJae::anna_kirja() { return kirja; }unsigned char cJae::anna_luku() { return luku; }unsigned char cJae::anna_jae() { return jae; }/*int cJae::vertaa( cJae &jaex ){  if (kirja<jaex.kirja) return 1;  if (kirja>jaex.kirja) return -1;  if (luku<jaex.luku) return 1;  if (luku>jaex.luku) return -1;  if (jae<jaex.luku) return 1;  if (jae>jaex.luku) return -1;  return 0;}int cJae::operator <(cJae jae1,cJae jae2){  return jae1.vertaa(jae2);}int cJae::operator ==(cJae jae1,cJae jae2){  if (return jae2.vertaa(jae1)==0) return 1; else return 0;}int cJae::operator !=(cJae jae1,cJae jae2){  if (return jae2.vertaa(jae1)!=0) return 1; else return 0;}int cJae::operator >(cJae jae1,cJae jae2){  return jae2.vertaa(jae1);}cJae& cJae::siirry( int siirtyma ){  unsigned char varakirja,varaluku,varajae;  varakirja=kirja;varaluku=luku;varajae=jae;  jaepit.siirry(varakirja,varaluku,varajae);  cJae uusijae(varakirja,varaluku,varajae);  return uusijae;}void cJae::sijoita( cJae jaex ){  kirja=jaex.kirja;  luku=jaex.luku;  jae=jaex.jae;}cJae& cJae::operator =(cJae jaex){  cJae jaer;  jaer.sijoita(jaex);  return jaer;}cJae& cJae::operator +(cJae jaex, int siirtyma){  cJae uusijae;  uusijae.sijoita(jaex);  uusijae=uusijae.siirry(siirtyma);  return uusijae;}cJae& cJae::operator -(cJae jaex, int siirtyma){  cJae uusijae;  uusijae.sijoita(jaex);  uusijae=uusijae.siirry(-siirtyma);  return uusijae;}*/