#include <alloc.h>#include "jaejakst.h"void cJaejaksot :: siirra_lohko_taulukossa( int alku, int loppu, int siirto ){  int i;  if (siirto<0)    for(i=alku;i<=loppu;i++) { jaejaksotaulukko[i+siirto]=jaejaksotaulukko[i]; }  if (siirto>0)    for(i=loppu;i>=alku;i--) { jaejaksotaulukko[i+siirto]=jaejaksotaulukko[i]; }}int cJaejaksot :: lisaa_jaejakso( cJaejakso jaejakso , int indeksi ){  cJaejakso **uusitaul,*uusijaejakso;  if (indeksi==-1) indeksi=lkm;  if (lkm==varattukoko) { // Kasvatetaan taulukkoa, mik³li se on jo t³ynn³    uusitaul = (cJaejakso **)realloc(jaejaksotaulukko,      sizeof(cJaejakso *)*(varattukoko+JAEJAKSOMAARALISAYS2) );    if (uusitaul==NULL) return 1;    jaejaksotaulukko=uusitaul;varattukoko += JAEJAKSOMAARALISAYS2;  };  uusijaejakso = new cJaejakso(jaejakso); // Luodaan uusi viite  if (uusijaejakso!=NULL) {    siirra_lohko_taulukossa( indeksi, lkm-1, 1 );    jaejaksotaulukko[indeksi] = uusijaejakso;    lkm++;    return 0;  } else return 1; // Ohjelma palauttaa 0, jos onnistui, 1, jos ep³onnistui.};void cJaejaksot :: poista_jaejakso( int indeksi ){  delete jaejaksotaulukko[indeksi];  siirra_lohko_taulukossa(indeksi+1,lkm,-1);};void cJaejaksot :: korvaa_jaejakso( cJaejakso jaejakso, int indeksi ){  delete jaejaksotaulukko[indeksi];  jaejaksotaulukko[indeksi] = new cJaejakso(jaejakso);};cJaejakso &cJaejaksot :: anna_jaejakso( int indeksi ){  return (*jaejaksotaulukko[indeksi]);}void cJaejaksot :: poista_jaejaksot(){  int i;  for(i=0;i<=lkm;i++) delete jaejaksotaulukko[i];};int cJaejaksot :: luo_jaejaksot_taulukko( int koko ){  jaejaksotaulukko = (cJaejakso **)malloc( koko*sizeof(cJaejakso *));  lkm = 0;  if (jaejaksotaulukko==NULL) return 1; else return 0;};void cJaejaksot :: poista_jaejaksot_taulukko(){  free(jaejaksotaulukko);};int cJaejaksot :: kirjoita_jaejaksot_tiedostoon(){  return 0;};int cJaejaksot :: hae_jaejaksot_tiedostosta(){  return 0;};