#include<iostream.h>#include<fstream.h>#include<stdio.h>#include<stdlib.h>#include<string.h>#include<conio.h>#include "apuohj.h"// Tekstiv³rim³³ritykset tai tulostuspaikat voisi toteuttaa makrojen avulla// Raamatun kirjojen nimet, tiedostonimet ja niiden tulostaminenstruct kirja {  char tdnimi[13];  char taydnimi[80];  int lukuja;} kirjaalkio;struct kirja kirjat[67];void lue_kirjat(){  ifstream fi("d:\\oma\\ht\\jjtesti\\kirjat.txt");  if (!fi)    { cout << "Tiedostoa ei läytynyt!!!!!!!" << endl;return; }  int kirja;  char lukujamj[4];  for(kirja=1;kirja<=66;kirja++){   fi.getline(kirjat[kirja].tdnimi,20);   fi.getline(kirjat[kirja].taydnimi,80);   fi.getline(lukujamj,4);   kirjat[kirja].lukuja=atoi(lukujamj);  }}void tulosta_kirjat( int alkurivi, int alkusarake ){  int kirja,rivi,sarake;  textbackground(5);  textcolor(7);  if ((alkurivi<1) || (alkurivi>  )) return;  if ((alkusarake< ) |  clrscr();  gotoxy(alkusarake,alkurivi);  cprintf(" RAAMATUN KIRJAT JÚRJESTYSNUMEROINEEN :");  for(kirja=1;kirja<=66;kirja++) {    rivi = ((kirja-1) % 11)+alkurivi+2; // % jakoj³³nnäs: kirjan jakoj³³nnäs jaettuna 11.    sarake = ((kirja-1) / 11)*13+alkusarake;       // kokonaislukujen jakolasku:       // tulos pyäristet³³n aina pienemp³³n.    gotoxy(sarake,rivi);    cprintf("%3d %-5s",kirja,kirjat[kirja].tdnimi);  }}// Jaejakson tulostamiseen liittyv³t aliohjelmatvoid tulosta_tayd_jaejakso(int alkukirja,int alkuluku,int alkujae,  int loppukirja,int loppuluku,int loppujae){  gotoxy(10,18); textcolor(7); textbackground(5);  cprintf("Antamasi jaejakso oli ");  gotoxy(34,18);  textcolor(0); textbackground(7);  cprintf("%d:%d:%d-%d:%d:%d",alkukirja,alkuluku,alkujae,	   loppukirja,loppuluku,loppujae);}void tulosta_jaejakso_sama_kirja(int kirja, int alkuluku, int alkujae,     int loppuluku, int loppujae){  gotoxy(10,18);  textcolor(7); textbackground(5);  cprintf("Antamasi jaejakso oli ");  gotoxy(34,18);  textcolor(0);textbackground(7);  cprintf("%d:%d:%d-%d:%d",    kirja,alkuluku,alkujae,loppuluku,loppujae);};void tulosta_jaejakso_sama_luku( int kirja, int luku, int alkujae,  int loppujae){  gotoxy(10,18);  textcolor(7); textbackground(5);  cprintf("Antamasi jaejakso oli ");  gotoxy(34,18); textcolor(14); textbackground(5);    cprintf("                         ");  gotoxy(34,18);  textcolor(0);textbackground(7);  cprintf("%d:%d:%d-%d", kirja,luku,alkujae,loppujae);}void tulosta_jaejakso_sama_jae( int kirja, int luku, int jae){  gotoxy(10,18); textcolor(7); textbackground(5);  cprintf("Antamasi jaejakso oli  ");  gotoxy(34,18);  textcolor(0);textbackground(7);  cprintf("%d:%d:%d",kirja,luku,jae);}void tulosta_jaejakso( int alkukirja, int alkuluku, int alkujae,		       int loppukirja, int loppuluku, int loppujae ){  // Tulostetaan jaejakso kohtaan 10=rivi, 18=sarake ruudulle  // mahdollisimman lyhess³ muodossa, ts. ottaen huomioon, onko  // jaejakson alku- ja loppujakeella yhteisi³ ominaisuuksia  // kuten sama kirja tai sama luku tai jopa sama jae.  textcolor(0);  gotoxy(10,18);  if (alkukirja!=loppukirja)    tulosta_jaejakso(alkukirja,alkuluku,alkujae,      loppukirja,loppuluku,loppujae);  else if (alkuluku!=loppuluku) {    tulosta_jaejakso_sama_kirja(alkukirja,alkuluku,alkujae,      loppuluku,loppujae);  } else if (alkujae!=loppujae) {    tulosta_jaejakso_sama_luku(alkukirja,alkuluku,alkujae,loppujae);  } else tulosta_jaejakso_sama_jae(alkukirja,alkuluku,alkujae);}// muut tulostusapuohjelmatvoid ala_valikko( int viite )// viite-parametri kertoo, onko kysymyksess³ viitteen vai jaejakson// syättä: viite=1 -> viite, viite=0 -> jaejakso{ gotoxy(1,25); textcolor(5); textbackground(8);// cprintf("          "); if (viite) { // Viitteen alavalikko   cprintf("(U) Uusi jaejakso (L) Lopeta tallettamatta (K) Korjaa (V) Valmis");   cprintf("(O) Opastus"); } else { // Jaejakson alavalikko   cprintf("(L) Lopeta tallettamatta (K) Korjaa (V) Valmis (O) Opastus"); }; for(int i=wherex();i<=80;i++) cprintf(" ");}void lyhyt_syotto_ohje()// tulostetaan jaejakson syättäkohdan alle rivit, jotka auttavat// syätt³m³³n jaejakson syätt³mist³, ( rivit 20,21 ruudulla ).{  gotoxy(10,20);  textcolor(7); textbackground(5); // cprintf("          ");  cout << "Anna jaejakso ALKUKIRJA ALKULUKU ALKUJAE (ENTER).\n";  gotoxy(10,21);  cout << "Editoi oletusta LOPPUKIRJA LOPPULUKU LOPPUJAE (ENTER).";}void ohjeet(int viite)// viite-parametri kertoo, onko kysymyksess³ viitteen vai jaejakson// syättä: viite=1 -> viite, viite=0 -> jaejakso// kutsuu: tulosta_kirjat()//         ala_valikko( viite ){ char merkki; clrscr(); gotoxy(3,1); cprintf (" Jaejakson alku:\n"); cprintf (" Kirjoita haluamasi jaejakso k³ytt³en j³rjestyslukuja:\n"); cprintf (" ALKUKIRJA ALKULUKU ALKUJAE ja paina enter.\n\n"); cprintf (" Jaejakson loppu:\n"); cprintf (" Olet editointitilassa ja edess³ on oletuksena jaejakson alku.\n"); cprintf (" Sinun ei tarvitse kuin muuttaa niit³ tietoja,\n "); cprintf (" jotka ovat erilaisia. Esim. jos jaejakso pysyy saman kirjan ja\n "); cprintf (" luvun sis³ll³ sinun tarvitsee muuttaa vain jae.\n "); cprintf (" Jatkuu, PAINA SPACE"); do { ch=getch(); } while ( ch!=' '); // odotetaan SPACEA // Palautetaan ruutu. tulosta_kirjat(); ala_valikko( viite );}void jaejaksonalku_kehote(){  gotoxy(10,18);  // Kehoite  cout << "Anna jaejakson alku  " ;  // Syättäalue rivill³ 18, sarake 34-   valkoisella pohjalla.  gotoxy(34,18); textcolor(0); textbackground(7); cprintf("           ");}void jaejaksonloppu_kehote(){ // Sama kuin jaejakson_alku_kehote lopulle ! ( vertaa )  gotoxy(10,18);  cout << "Anna jaejakson loppu " ;  gotoxy(34,18); textcolor(0); textbackground(7); cprintf("           ");}char lue_alkujae( char *rivi , char *lopetusmerkit ){  char lopmerkki;  do {   jaejaksonalku_kehote();   gotoxy(34,18);   lopmerkki=lue_jono(rivi,10,lopetusmerkit);   if (lopmerkki=='O') ohjeet();  } while ((lopmerkki=='O') || (lopmerkki=='K'));  return lopmerkki;}char lue_loppujae( char *rivi, char *lopetusmerkit ){  char lopmerkki;  do {   jaejaksonloppu_kehote();   gotoxy(34,18);   lopmerkki=lue_jono(rivi,10,lopetusmerkit);   if (lopmerkki=='O') ohjeet();  } while ((lopmerkki=='O') || (lopmerkki=='\r'));  return lopmerkki;}/******************************************************************/int jaejakso_oikeellisuus(int alkukirja,int alkuluku,int alkujae,			  int loppukirja,int loppuluku,int loppujae)/*Ohjelma tarkistaa sen, ett³ jaejakson parametrit ovatpositiivisia ja ett³ jaejakson j³lkimm³inen ( loppu ) jae on todellaraamatun jakeiden mukaisessa j³rjestyksess³ ensimm³isen ( alku )j³lkeen.Se, ett³ jakeet todella ovat olemassa j³³ t³ss³ viel³ tarkistamatta !Jos t³m³ oikeellisuustarkistus huomaa virheen, se palauttaa 0:n,muutoin 1:n. ( ehtolauseessa k³yttä³ varten )Lis³ksi virhe tapauksessa tulostetaan ruudulle kohtaan 10=rivi,16=sarakeviesti ja odotetaan SPACE:a.*/{ if((alkukirja>loppukirja)||((alkukirja==loppukirja)&&(alkuluku>loppuluku))     ||((alkukirja==loppukirja)&&(alkuluku==loppuluku)&&(alkujae>loppujae))     ||(alkukirja<=0)||(alkuluku<=0)||(alkujae<=0)||(loppukirja<=0)     ||(loppuluku<=0)||(loppujae<=0))	 {	   gotoxy(10,16); textcolor(14); textbackground(5);	   cprintf("VIRHEELLINEN JAEJAKSO !!! (Paina v³lilyänti)");	   while( getch()!=32 ); // odota SPACE	   gotoxy(10,16);textbackground(5);	   cprintf("                                            ");	   return 0;	 }   // Lis³n³ tarvitaan oikeellisuus jaepituustietojen avulla.   // if (oikeellisuus ) oikeellisuus =   // raamattu.oikeellisuus(alkukirja,alkuluku,alkujae) &&   // raamattu.oikeellisuus(alkukirja,alkuluku,alkujae);   return 1;}// Jaejakson jaetta kysytt³ess³ k³ytett³v³ purkualiohjelma, joka// purkaa merkkijonosta esiin kirjan, luvun ja jakeen// Ohjelmaa kutsutaan erikseen alku- ja loppujakeen kohdalla.void pura_mj( char *mj, int &kirja, int &luku, int &jae ){  char *p;  p=strtok( mj, " ");kirja=atoi(p); if (!kirja) return;  p=strtok( NULL, " ");luku=atoi(p); if (!luku) return;  p=strtok( NULL, " ");jae=atoi(p); if (!jae) return;}// Varsinainen jaejaksoa kysyv³ ohjelma.char kysy_jaejakso( /*cJaejakso &jaejakso */ , int viite )// Ideana on se, ett³ kysytt³ess³ tarkistetaan jakeiden// jaejakson oikeellisuus k³ytt³en cRaamattu-oliota, johon// p³³st³³n viittamaan cNaytto-oliosta, johon t³m³kin// ohjelma metodina sijoitetaan.// Jaejakso-olion ei tarvitse t³lläin en³³ huolehtia tietojensa// oikeellisuudesta.// Ohjelma palauttaa lopetusmerkin.// Alkujae voidaan syätt³³ RETURN n³pp³imell³ mutta// loppujakeen kohdalla t³ytyy varmistua siit³, mill³// tavalla jatketaan, ts. RETURN ei kelpaa.{ int alkukirja, alkuluku, alkujae, loppukirja, loppuluku, loppujae; int oikeellisuus; // Ohjelma tutkii, ett³ syätetty tieto on oikeaa,		   // ts. hyv³ksyttyn³ syätteen³ ei hyv³ksyt³		   // virheellist³ jaejaksoa.		   // Jos jaejaksoa ei halutakaan lopulta tallettaa,		   // on k³ytt³j³n mahdollista keskeytt³³ syättä		   // lopetusmerkill³ 'L' char rivi[11],rivi2[11]; char lopmerkki; char lopetusmerkit[7]; // rivisyätän lopetusmerkit, \r=RETURN // lopetusmerkit sen mukaan syätet³³nkä jaejaksoa vai viitett³ if (viite) strcpy(lopetusmerkit,"\rULKVO");   else strcpy(lopetusmerkit,"\rLKVO"); tulosta_kirjat(); ala_valikko( viite ); do { // Jatketaan kysymist³, kunnes ollaan vakuuttuneita siit³,      // ett³ jaejakso on oikein tai ett³ ei syätet³k³³n sit³.   lyhyt_syotto_ohje();   // Jaejakson alkujakeen lukeminen, ruudulla rivi 18.   strcpy(rivi,"");   /* ? */   gotoxy(50,18); textcolor(7); textbackground(5);   cprintf("                            ");   /* ? */   // Jaejakson alkujakeen lukeminen korkeintaan 10 merkki³ pitk³ksi   // merkkijonoksi rivi.   lue_alkujae( rivi, lopetusmerkit );   if (lopmerkki=='L') break; // EI TALLETETA SYúTTúÚ !   strcpy(rivi2,rivi); // alkujae oletukseksi loppujakeelle   pura_mj( rivi, alkukirja, alkuluku, alkujae );   lue_loppujae(rivi2,lopetusmerkit);   pura_mj( rivi2, loppukirja, loppuluku, loppujae );   // cin >> loppukirja >> loppuluku >> loppujae;   oikeellisuus=jaejakso_oikeellisuus( alkukirja, alkuluku, alkujae,				       loppukirja, loppuluku, loppujae );   // ** Sijoitetaan tiedot palautettavaan jaejakso -olioon **   // jaejakso.aseta_alkujae( alkukirja, alkuluku, alkujae );   // jaejakso.aseta_loppujae( loppukirja, loppuluku, loppujae );   // jaejakson tulostus syätän j³lkeen tarkistusta varten   tulosta_jaejakso( alkukirja, alkuluku, alkujae, loppukirja, loppuluku,		     loppujae ); } while (lopmerkki!='L'); return oikeellisuus;}void tulosta_viite( /* viite */ ){  /* Tulostetaan viite typistetyss³ muodossa yhdist³en l³hekk³isi³     jaejaksoja */}char kysy_viite( /* cIndexes &viite */ ){   char lopmerkki;   int jaejaksonro;   do {     clrscr();     gotoxy(10,23);     textcolor(7); textbackground(5);     cprintf("Anna viitteeseen tulevat jaejaksot ja sen j³lkeen V\n");     cprintf("Jos annat L, viimeinen syätetty jaejakso j³³ tallentumatta\n");     cprintf("Paina SPACE jatkaaksesi.");     do { lopmerkki=getch(); } while ( lopmerkki!=' '); // odota SPACE     do {       lopmerkki=kysy_jaejakso( /* jaejakso */ );       // talletetaan saatu jaejakso jaejaksot-tauluun ja viitteen rakenteeseen:       // if (lopmerkki!='L') {  jaejaksonro=jaejaksot.lisaa( jaejakso );       //   viite.lisaa( jaejaksonro ); }     } while ( ( lopmerkki!='V' ) && (lopmerkki!='L'));     clrscr();     tulosta_viite( /*viite */ );     if (lopmerkki!='L') {       cprintf("Oletko tyytyv³inen viitteeseen [K/E]");       do { lopmerkki=getch(); } while ( (lopmerkki!='K') && (lopmerkki!='E'));     }   } while (( lopmerkki!='K' ) && (lopmerkki!='L'));}void kysy_viitteet( /* rinnakkaisviitteet */ )// K³ytet³³n rinnakkaisviitteiden syätäss³ !{  // cIndexes viite;  // int viitenro;  char lopmerkki;  do {    clrscr();    cprintf("Syät³ rinnakkaisviitteen viitteet:\n");    cprintf("Paina SPACE, kun haluat aloittaa.\n");    do { lopmerkki=getch(); } while ( lopmerkki!=' '); // odota SPACE    lopmerkki=kysy_viite( /* viite */ );    if (lopmerkki!='L') {      // Lis³t³³n uusi viite viitteet rakenteeseen:      // viitteet.lisaa( viite );      // viitteet=kaikkien viitteiden taulu      // rinnakkaisviitteet=tietyn jaetiedon rinnakkaisviitteiden taulu      // rinnakkaisviitteet.lisaa( viite );      cprintf("Onko viel³ lis³³ viitteit³ [K/E]");      do { lopmerkki=getch(); } while ( (lopmerkki!='K') && (lopmerkki!='E'));    }  } while (( lopmerkki!='K' ) && (lopmerkki!='L'));}int main(){/* cJaejakso jaejakso   cIndexes viite */  ch valinta;  int oikeellisuus;  lue_kirjat();  cprintf("Kysyt³³nkä viite [V] vai jaejakso [J]");  do { valinta=getch(); } while { (valinta!='V') && (valinta!='J'));  switch (valinta) {    case 'J' : kysy_jaejakso(/* jaejakso */,0); break;    case 'V' : kysy_viite( /*viite */); break;  }  return 0;}