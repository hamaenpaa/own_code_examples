#include "jaejakso.h"int cJaejakso :: anna_jaejaksonro(){  return jaejaksonro;}void cJaejakso :: aseta_jaejaksonro(int ijaejaksonro){  jaejaksonro = ijaejaksonro;}void cJaejakso :: anna_alkujae( unsigned char *oalkukirja, unsigned char *oalkuluku, unsigned char *oalkujae ){  jae1.anna_jae( oalkukirja, oalkuluku, oalkujae );}void cJaejakso :: aseta_alkujae( unsigned char ialkukirja, unsigned char ialkuluku, unsigned char ialkujae ){  jae1.aseta_jae( ialkukirja, ialkuluku, ialkujae );}void cJaejakso :: anna_loppujae( unsigned char *oloppukirja, unsigned char *oloppuluku, unsigned char *oloppujae ){  jae2.anna_jae( oloppukirja, oloppuluku, oloppujae );}void cJaejakso :: aseta_loppujae( unsigned char iloppukirja,   unsigned char iloppuluku, unsigned char iloppujae ){  jae2.aseta_jae( iloppukirja, iloppuluku, iloppujae );};/*int cJaejakso::vertaa( cJaejakso jaejakso ){  // Jos jaejakso > t³m³ jaejakso, niin 1.  // Jos samat, niin 0.  // Jos jaejakso < t³m³ jaejakso, niin -1.  // Jaejakso1 < jaejakso2, jos jaejakso1:n alkujae < jaejakso2:n alkujae  // tai jos alkujae1=alkujae2 ja loppujae1<loppujae2.  // kirjavertailu  if (jae1>jaejakso.jae1) return 1;  if (jae1<jaejakso.jae1) return -1;  if (jae2>jaejakso.jae2) return 1;  if (jae2<jaejakso.jae2) return -1;  return 0;}int cJaejakso::operator<(const cJaejakso jaejakso1, const cJaejakso jaejakso2){  // edellist³ vertailua vastaava operaattori  return jaejakso1.vertaa( jaejakso2 );}int cJaejakso::operator>(const cJaejakso jaejakso1, const cJaejakso jaejakso2){  return jaejakso2.vertaa( jaejakso1 );}int cJaejakso::operator==(const cJaejakso jaejakso1, const cJaejakso jaejakso2){  if (jaejakso1.vertaa( jaejakso2 )==0) return 1; else return 0;}int cJaejakso::operator!=(const cJaejakso jaejakso1, const cJaejakso jaejakso2){  if (jaejakso1.vertaa( jaejakso2 )!=0) return 1; else return 0;}int cJaejakso::perakkaisia( cJaejakso jaejakso ){  if ( jae1<jaejakso.jae1 ) {      if (jae2==jaejakso.alkujae-1) return 1; else return 0;  } else {    if (jaejakso.loppujae==alkujae-1) return 1; else return 0;  }}int cJaejakso::erillisia( cJaejakso jaejakso ){  if (*this<jaejakso) {    if (loppujae<jaejakso.alkujae-1) return 1; else return 0;  } else {    if (jaejakso.loppujae<alkujae-1) return 1; else return 0;  }}int cJaejakso::paallekkaisia( cJaejakso jaejakso2 ){}*/