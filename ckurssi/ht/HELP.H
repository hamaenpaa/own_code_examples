/****************************************************************************//*     H  E  L  P  .  H**** Tekij³:         Vesa Lappalainen 6.12.1993** Muutettu:** Mit³ muutettu:**** Tarkoituksena on, ett³ avustukset voidaan kirjoittaa tiedostoon** ohjelma.HLP, joka on muotoa:****   [PÚÚMENU]**   ; Kommenttirivi jossa voi olla mit³ vaan eik³ tulostu**   P³³menusta voit valita ...**   ...**   [TULOSTUS]**   Tulostus on ...**   ...**   # ; tarkoittaa n³ytän pys³ytt³mist³.**   Tulostus menee...**   ...**   [LISÚÚ UUSI]**   Lis³t³³n uusi ...**   [t_ok]# ; jos hakasulun per³ss³ on jokin merkki, ei t³m³**   ;         otsikko läydy *-etsimisell³.**   Tarkistus tekee sit³ ja t³t³**   [SISÚLLYS] ; T³m³ olisi aina hyv³ olla!**   Sis³llys:**   ...****** Avustustiedoston aihenimien "case" ei vaikuta, eli [P³³Menu] == [PÚÚMENU]**** Aliohjelmat:**    alusta_help            - alustaa help-systeemin valitulle ohjelmalle**    vapauta_help           - lopettaa helpin k³ytän**    help                   - tulostaa valitun help-tekstin jos**                             aihe hakasuluissa.  Jollei ole, tulostetaan**                             kutsuparametri sellaisenaan**    help_aihe              - tulostaa valitun teksin.  Jos teksti**                             ei ole hakasuluissa, lis³t³³n ne**    help_hakemisto         - helpin selailutilaan valitun aiheen kohdalta**                             tarvittaessa lis³t³³n aiheeseen hakasulut****** K³yttä:**   Ohjelmoijan on ennen helpin k³ytt³mist³ kutsuttava (myäs avustus**   tiedoston vaihtamiseksi):****     alusta_help("Oma"); // alustaa help-tiedoston Oma.HLP****   Kun helpi³ ei en³³ tarvita pit³³ kutsua (uusi alusta_help vapauttaa**   edellisen automaattisesti).****     vapauta_help();****   Kun halutaan avustusta esimerkiksi aiheesta TULOSTUS, kutsutaan****     help("[TULOSTUS]");****   Aihe voi olla myäs jokereita sis³lt³v³ (esim. [TUL*]).  Jos aihe**   on NULL, aloitetaan sis³llysluettelosta pyäritt³minen****   Jotta helpi³ olisi mahdollista k³ytt³³ samanlaisena myäs ohjelman**   sis³isille teksteille, voidaan kutsua****     help("Valittava jotakin\n");****   joka tulostaa helppim³isesti lainausmerkeiss³ oleva tekstin.**   Eli jos teksti ei ala [ tulostetaan teksti sellaisenaan.****   Jos hakasulkuja ei haluta kirjoittaa aiheen ymp³rille kutsussa,**   voidaan k³ytt³³ muotoa****     help_aihe("Tulostus"); // Lis³³ tarvittaessa hakasulut****   Helpissa voidaan k³ytt³³ myäs hakuohjelmaa kutsulla****     help_hakemisto("[TULOSTUS]"); // Aloittaa rivilaskurin alusta!****   jolloin aloitetaan tulostamalla tulostksen ohjeet ja kysyt³³n**   hakusanaa.  Hakasulut lis³t³³n tarvittaessa.****   Jos tulee paljon help() - tulostuksia samaan kasaan, kannattaa**   aluksi kutsua****     alusta_help_rivit()****   jotta pys³ytyslaskuri saadaan aloittamaan alusta.****   C++ k³ytäss³ riitt³³ kirjoittaa cHelp help("oma");**   koska vapauta_help kutsutaan sitten automaattisesti helpin**   h³vitt³j³ss³*/#ifndef HELP_H#define HELP_H#define HELP_STOP_JONO "#"#define HELP_JONO      "?"#ifdef __cplusplusextern "C" {#endifint help(const char *);int help_aihe(const char *);int help_hakemisto(const char *);int alusta_help(const char *);void vapauta_help(void);void alusta_help_rivit(void);#ifdef __cplusplusclass cHelp {public:  cHelp(const char *s)           { alusta_help(s);              }  ~cHelp()                       { vapauta_help();              }  int help(const char *s)        { return ::help(s);            }  int aihe(const char *s)        { return help_aihe(s);         }  int hakemisto(const char *s)   { return help_hakemisto(s);    }  void alusta_rivit(void)        { alusta_help_rivit();         }};}#endif#endif