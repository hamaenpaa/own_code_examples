/* kerho.cpp *//* Kerho-ohjelman runko ja alustavat luokat.**  Tekij³t:          Vesa Lappalainen**                    Ohjelmointikurssi 1996**  Tehty:            20.12.1991**  Muutettu          19.12.1993/vl**                    06.12.1995/vl  - C++ versio**  Mit³ muutettu:    avustus**  Muutettu          06.12.1995/vl**  Mit³ muutettu:    tehty C++ versio**  Muutettu          07.12.1995/vl**  Mit³ muutettu:    tehty document/view C++ versio**  Muutettu          26.12.1996/vl**  Mit³ muutettu:    lis³tty tunnusnumeron yll³pito**                    jotkut nimet muutettu yleisimmiksi******  Teht³vi³: 1) Luodaanko p³³ohjelman kerholle mit³³n j³sentaulukkoa**               ennenkuin tehd³³n naytto.lue()?**            2) Poistetaanko jotakin p³³ohjelman kerhosta p³³ohjelman**               alkaessa?**            3) Miksi metodissa "int cKerho::lisaa(const cJasen &jasen)"**               luodaan uusi j³sen, eik³ tyydyt³ laittamaan osoitinta**               parametrina tuotuun j³seneen?***/#include <iostream.h>#include <stdio.h>#include <stdlib.h>#include <string>using namespace std;#ifdef __TURBOC__               /* Syättä Turbo-C:n mukaisesti.             */# define GETCH# include <conio.h>#endif//----------------------------------------------------------------------------// Vakiota//----------------------------------------------------------------------------const char *TARKENNIN     = ".dat";const char *VANHATARK     = ".bak";const int  MAX_JASENIA    = 5;const int  MERKKI_ISOKSI  = 1;const int  MYOS_PIENET    = 0;const char *KAIKKI_KELPAA = NULL;const char EI_OLETUSTA    = 0;const char *RIVINVAIHTO   = "\r\n";//----------------------------------------------------------------------------// Yleisk³yttäisi³ apualiohjelmia://----------------------------------------------------------------------------char lue_merkki(void){#ifdef GETCH /* Seuraava toimii mm. Turbo C:ss³: */  return (char)getch();#else        /* Seuraava on standardin mukainen: */  char s[50];  fgets(s,50,stdin);  return s[0];#endif}char isoksi(char c){  if ( c<'a' ) return c;  if ( c>'z' ) return c;  return (char)(c-('a'-'A'));}char odota_nappain(const char *kelpaavat, char oletus,                            int merkki_isoksi){  char painettu;  do {    painettu = lue_merkki();    if ( merkki_isoksi ) painettu = isoksi(painettu);    if ( oletus != EI_OLETUSTA && strchr(RIVINVAIHTO,painettu) )      return oletus;  } while ( kelpaavat != NULL && strchr(kelpaavat,painettu) == NULL );  return painettu;}void odota_jotakin(void){  cout << "Paina jotakin!" << endl;  odota_nappain(KAIKKI_KELPAA,EI_OLETUSTA,MERKKI_ISOKSI);}int kylla_vastaus(void){  return ( odota_nappain("KE",'K',MERKKI_ISOKSI) == 'K' );}void ei_toimi(void){  cout << "Ei toimi viel³!" << endl;  odota_jotakin();}void viiva(int pit, char merkki){  for (int i = 0; i<pit; i++)    cout << merkki;}void otsikko(char c,const char *teksti){  cout << "\n\n\n" << endl;  cout << c << ".  " << teksti << endl;  viiva(  1  +  3     + strlen(teksti),'=');  cout << "\n" << endl;}int ilmoitus(const char *s){  if ( s == NULL ) return 0;  cout << "\n" << s << endl;  odota_jotakin();  return 1;}//----------------------------------------------------------------------------// Jasenen m³³rittely://----------------------------------------------------------------------------class cJasen {     // J³senluokka, jolle tulee viel³ paljon ominaisuuksia  int tunnus_nro;  string nimi;  string hetu;  string katuosoite;  string postinumero;  string postiosoite;  string kotipuhelin;  string tyopuhelin;  string autopuhelin;  int    liittymisvuosi;  double jmaksu;  double maksu;  string lisatietoja;  static int seuraava_nro; // Kaikille j³senille yhteinen attribuuttipublic:  cJasen() { alusta(); }  void alusta();  void vastaa_aku_ankka();  void tulosta(ostream &os) const;  int  rekisteroi() { tunnus_nro = seuraava_nro;                      seuraava_nro++; return tunnus_nro;}  int Tunnus_nro() const { return tunnus_nro; }};//----------------------------------------------------------------------------// Jasenen k³sittely://----------------------------------------------------------------------------int cJasen::seuraava_nro = 1;void cJasen::alusta(){  tunnus_nro     = 0;  nimi           = "";  hetu           = "";  katuosoite     = "";  postinumero    = "";  postiosoite    = "";  kotipuhelin    = "";  tyopuhelin     = "";  autopuhelin    = "";  liittymisvuosi = 0;  jmaksu         = 0;  maksu          = 0;  lisatietoja    = "";}void cJasen::vastaa_aku_ankka(){  char apuhetu[50];  sprintf(apuhetu,"%02d%02d%02d-%03d%c",          rand()%31+1,rand()%12+1,rand()%91+1,rand()%1000,rand()%25+'A');  apuhetu[11]=0;  nimi           = "Ankka Aku";  hetu           = apuhetu;  katuosoite     = "Ankkakuja 6";  postinumero    = "12345";  postiosoite    = "ANKKALINNA";  kotipuhelin    = "12-1234";  tyopuhelin     = "";  autopuhelin    = "";  liittymisvuosi = 1996;  jmaksu         = 50.00;  maksu          = 30.00;  lisatietoja    = "Velkaa Roopelle";}void cJasen::tulosta(ostream &os) const{  os << "  " << nimi << "  " << hetu << endl;  os << "  " << katuosoite << "  " <<                postinumero << " " << postiosoite << endl;  os << "  k: " << kotipuhelin <<         " t: " << tyopuhelin  <<         " a: " << autopuhelin << endl;  os << "  Liittynyt " << liittymisvuosi << ".";           cout.precision(2); cout.setf(ios::showpoint);  os << "  J³senmaksu " << jmaksu << " mk."        "  Maksettu "   << maksu  << " mk." << endl;  os << "  " << lisatietoja << endl;}//----------------------------------------------------------------------------// Kerhon m³³rittely://----------------------------------------------------------------------------class cKerho {  int    max_jasenia;  int    jasenia;  int    muutettu;  string tiedoston_nimi;  string kerhon_nimi;  cJasen apujasen;  cJasen **jasenet;  void  poista_kaikki()    { poista_jasenet(); poista_taulukko();            }  void  poista_jasenet();  void  poista_taulukko();  const char *luo_taulukko(int koko=MAX_JASENIA);  void alusta()            { kerhon_nimi = ""; tiedoston_nimi = "";                            max_jasenia = 0;  jasenia = 0; muutettu = 0;     }  int rajoihin(int i) const { if ( i<0 || max_jasenia <= i ) i = 0; return i;}public:  cKerho(int koko=0)  { alusta(); luo_taulukko(koko);                        }  ~cKerho()           { if ( muutettu ) talleta(); poista_kaikki();          }  const char *lisaa(const cJasen &jasen);  const cJasen &anna(int i) const  {    if ( jasenia == 0 ) return apujasen;    return *jasenet[rajoihin(i)];  }  const char *lue_tiedostosta(const char *tied);  const char *talleta();  const string &Kerhon_nimi()    const   { return kerhon_nimi;               }  int Jasenia()                  const   { return jasenia;                   }  const string &Tiedoston_nimi() const   { return tiedoston_nimi;            }};//----------------------------------------------------------------------------// Kerhon toteutus://----------------------------------------------------------------------------const char *EI_VOI_LUODA = "J³seniställe ei saada varattua tilaa muistista!";const char *LIIKAA_JASENIA = "Liikaa j³seni³, ei voi lis³t³!";const char *EI_SAA_JASENTA = "Ei saada tilaa uudelle j³senelle!";void cKerho::poista_jasenet(){  for (int i=0; i<jasenia; i++)    delete jasenet[i];  jasenia = 0;}const char *cKerho::lisaa(const cJasen &jasen){  cJasen *uusi_jasen;  if ( jasenia >= max_jasenia ) return LIIKAA_JASENIA;  uusi_jasen = new cJasen(jasen);  if ( uusi_jasen == NULL ) return EI_SAA_JASENTA;  jasenet[jasenia] = uusi_jasen;  jasenia++;  return NULL;}const char *cKerho::luo_taulukko(int koko){  poista_kaikki();  if ( koko <= 0 ) return NULL;  jasenet = (cJasen **)malloc( koko * (sizeof(cJasen *)) );  jasenia = 0;  max_jasenia = 0;  if ( jasenet == NULL ) return EI_VOI_LUODA;  max_jasenia = koko;  return NULL;}void cKerho::poista_taulukko(){  if ( max_jasenia > 0 ) free(jasenet);  max_jasenia = 0;}const char *cKerho::lue_tiedostosta(const char *tied){  // Pahasti kesken  kerhon_nimi = tied;  tiedoston_nimi = tied;  return luo_taulukko();}const char *cKerho::talleta(){  // Pahasti kesken  return NULL;}//----------------------------------------------------------------------------// N³ytän m³³rittely//----------------------------------------------------------------------------class cNaytto {  cKerho *kerho; // Osoitin kerhoon => voi olla sama kerho monessa n³ytäss³  void logo(void);  void avustus(char valinta);  void lisaa_uusi_jasen(char valinta);  void etsi_jasenen_tiedot(char valinta);  void tulosteet(char valinta);  void tietojen_korjailu(char valinta);  void paivita_jasenmaksuja(char valinta);  void paamenu();public:  cNaytto(cKerho *p) : kerho(p) {;}  ~cNaytto() { talleta(); }  void ohjeet(void);  void kiitokset(void);  int  lue_tiedosto();  int  talleta();  int  paavalinta();};void cNaytto::logo(void){  cout << endl;  cout << "      ###################################" << endl;  cout << "      #   J Ú S E N R E K I S T E R I   #" << endl;  cout << "      #     versio 9.95                 #" << endl;  cout << "      #     Hannu Hanhi                 #" << endl;  cout << "      ###################################" << endl;}void cNaytto::ohjeet(void){  logo();  cout << endl;  cout << "T³ll³ ohjelmalla yll³pidet³³n kerhon j³senrekisteri³." << endl;}void cNaytto::kiitokset(void){  cout << endl;  cout << "KIITOS KÚYTúSTÚ JA TERVETULOA UUDELLEEN" << endl;  cout << "\n\n" << endl;}int cNaytto::lue_tiedosto(){  cout << "Anna kerhon nimi>" << endl;  ei_toimi();  return ilmoitus(kerho->lue_tiedostosta("KELMIT"));}int cNaytto::talleta(){  logo();  if ( ilmoitus(kerho->talleta()) ) return 1;  cout << endl;  cout << "Tiedot talletettu tiedostoon " << kerho->Tiedoston_nimi()       << TARKENNIN << endl;  cout << "Vanhat tiedot tiedostossa    " << kerho->Tiedoston_nimi()       << VANHATARK << endl;  cout << "\n\nTosin talletus ei viel³ toimi!" << endl;  return 0;}void cNaytto::lisaa_uusi_jasen(char valinta){  cJasen jasen;  otsikko(valinta,"Uuden j³senen lis³ys");  cout << "Toistaiseksi osaan lis³t³ vain Aku Ankan" << endl;    jasen.rekisteroi();    jasen.vastaa_aku_ankka();    cout << "Lis³t³³nkä" << endl;    jasen.tulosta(cout);    cout << ":";    if ( kylla_vastaus() )      ilmoitus(kerho->lisaa(jasen));}void cNaytto::etsi_jasenen_tiedot(char valinta){  otsikko(valinta,"Etsi j³senen tiedot");  ei_toimi();}void cNaytto::tulosteet(char valinta){  otsikko(valinta,"Tulosteet");  cout << "Toimii toistaiseksi vain n³ytälle\n" << endl;  cout << "---------------------------------------------------------" << endl;  for (int i=0; i<kerho->Jasenia(); i++) {    const cJasen &jasen = kerho->anna(i);    jasen.tulosta(cout);    cout << endl;  }  cout << "---------------------------------------------------------" << endl;  odota_jotakin();}void cNaytto::tietojen_korjailu(char valinta){  otsikko(valinta,"Tietojen korjailu");  ei_toimi();}void cNaytto::paivita_jasenmaksuja(char valinta){  otsikko(valinta,"P³ivit³ j³senmaksuja");  ei_toimi();}void cNaytto::avustus(char valinta){  otsikko(valinta,"Avustus");  ei_toimi();}void cNaytto::paamenu(){  cout << "\n\n\n\n" << endl;  cout << "J³senrekisteri" << endl;  cout << "==============" << endl;  cout << endl;  cout << "Kerhossa " << kerho->Kerhon_nimi() << " on " <<          kerho->Jasenia() << " j³sent³." << endl;  cout << endl;  cout << "Valitse:" << endl;  cout << "   ?  = avustus" << endl;  cout << "   0  = lopetus" << endl;  cout << "   1  = lis³³ uusi j³sen" << endl;  cout << "   2  = etsi j³senen tiedot" << endl;  cout << "   3  = tulosteet" << endl;  cout << "   4  = tietojen korjailu" << endl;  cout << "   5  = p³ivit³ j³senmaksuja" << endl;  cout << "   :";}int cNaytto::paavalinta(){  char nappain;  while (1) {    paamenu();    nappain = odota_nappain("?012345",EI_OLETUSTA,MERKKI_ISOKSI);    switch (nappain) {      case '?': avustus(nappain);               break;      case '0': return 0;      case '1': lisaa_uusi_jasen(nappain);      break;      case '2': etsi_jasenen_tiedot(nappain);   break;      case '3': tulosteet(nappain);             break;      case '4': tietojen_korjailu(nappain);     break;      case '5': paivita_jasenmaksuja(nappain);  break;      default : cout << "N³in ei voi k³yd³!" << endl; return 1;    }  }}int main(void){  cKerho kerho;  cNaytto naytto(&kerho);  naytto.ohjeet();  if ( naytto.lue_tiedosto() ) return 1;  naytto.paavalinta();  if ( naytto.talleta() ) return 2;  naytto.kiitokset();  return 0;}